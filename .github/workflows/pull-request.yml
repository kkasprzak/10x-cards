name: Pull Request Checks

on:
  pull_request:
    branches: [master]

jobs:
  lint:
    name: Lint Code
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run linting
        run: npm run lint

  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest
    needs: lint

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Run unit tests
        run: npm test

      - name: Run test coverage
        run: npm run test:coverage

      - name: Upload coverage reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          retention-days: 7

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest
    needs: lint
    environment: integration

    env:
      SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
      SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: "npm"

      - name: Install dependencies
        run: npm ci

      - name: Install Playwright browsers
        run: npx playwright install --with-deps chromium

      - name: Run E2E tests
        run: npm run test:e2e

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 7

  status-comment:
    name: PR Status Comment
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    if: always()

    steps:
      - name: Check job status
        id: check
        if: ${{ needs.unit-tests.result == 'success' && needs.e2e-tests.result == 'success' }}
        run: echo "success=true" >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
        if: steps.check.outputs.success == 'true'

      - name: Download coverage reports
        if: steps.check.outputs.success == 'true'
        uses: actions/download-artifact@v4
        with:
          name: coverage-report
          path: coverage/

      - name: Add PR comment for success
        if: steps.check.outputs.success == 'true'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: build-status
          message: |
            ## ✅ All checks passed successfully!

            - ✅ Lint check passed
            - ✅ Unit tests passed
            - ✅ E2E tests passed

            *See artifacts for detailed reports.*

      - name: Add PR comment for failure
        if: steps.check.outputs.success != 'true'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: build-status
          message: |
            ## ❌ Some checks failed!

            Please check the workflow logs for details.
